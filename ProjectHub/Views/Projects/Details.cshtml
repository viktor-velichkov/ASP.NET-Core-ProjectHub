@model Tuple<ProjectDetailsViewModel, List<Discipline>>

<link href="//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<script src="//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<style>
    .timer {
        font-size: medium
    }

    .field-title {
        font-size: larger;
        font-weight: bold;
        padding-bottom: 5px;
        text-align: center;
    }

    .small-text-normal {
        text-decoration: none;
        font-size: medium;
        font-weight: normal
    }

    .small-text-bold {
        text-decoration: underline;
        font-size: medium;
        font-weight: bold
    }

    .small-text {
        font-size: medium;
    }
</style>
<div class="row">
    <p class="field-title offset-lg-3 offset-md-2 offset-sm-2 offset-1 col-lg-6 col-md-8 col-sm-8 col-10" style="background-color: lightskyblue; border-radius: 5px;">Жилищна сграда</p>
</div>

<div class="row">
    <div class="field-title offset-lg-2 offset-md-1 offset-sm-1 offset-0 col-lg-8 col-md-10 col-sm-10 col-12" style="padding-left: 0px; padding-right: 0px;">
        <div class="row" style="margin-left: 0px; margin-right: 0px;">
            <div class="col-5" style="background-color: lightskyblue; border-radius: 5px; padding: 2.5%; left:5%">
                <div>Team</div>
                <div class="row small-text-bold" style="margin-left: 0px; text-decoration: none">Investor:</div>
                <div class="row small-text-normal" style="margin-left: 20%; margin-right: 0px;">@Model.Item1.Investor</div>
                @{
                    <div class="row small-text-bold" style="margin-left: 0px; text-decoration: none">Manager:</div>
                    var manager = Model.Item1.Manager;
                    <div class="row small-text-normal" style="margin-left: 20%; margin-right: 0px;">
                        @if (String.IsNullOrWhiteSpace(manager))
                        {
                            <p style="margin:0px;">Not hired yet.</p>
                        }
                        else
                        {
                            <p style="margin:0px;">@manager</p>
                        }
                    </div>
                    <div class="row small-text-bold" style="margin-left: 0px; text-decoration: none">Designers :</div>

                    foreach (var discipline in Model.Item2)
                    {
                        var designer = Model.Item1.Designers.FirstOrDefault(d => d.Discipline.Equals(discipline.Name));
                        <div class="row small-text-normal" style="margin-left: 5%; text-decoration: none">• @discipline.Name:</div>
                        <div class="row small-text-normal" style="margin-left: 20%; margin-right: 0px;">

                            @if (designer == null)
                            {
                                <p style="margin:0px;">Not hired yet.</p>
                            }
                            else
                            {
                                <p style="margin:0px;">@designer.Name;</p>
                            }
                        </div>
                    }

                    var contractor = Model.Item1.Contractor;
                    <div class="row small-text-bold" style="margin-left: 0px; text-decoration: none">Main contractor:</div>
                    <div class="row small-text-normal" style="margin-left: 20%; margin-right: 0px;">
                        @if (String.IsNullOrWhiteSpace(contractor))
                        {
                            <p style="margin:0px;">Not hired yet.</p>
                        }
                        else
                        {
                            <p style="margin:0px;">@contractor</p>
                        }
                    </div>
                }
            </div>
            <div class="col-2"></div>
            <div class="col-5" style="background-color: lightskyblue; border-radius: 5px; padding: 2.5%; right: 5%;">
                <div>Info</div>
                <div class="row small-text-bold offset-lg-1" style="padding-bottom:0px; margin-left: 0px; text-decoration: none">
                    City:
                    <div class="row small-text-normal" style="margin-left:5px; margin-right: 0px;">@Model.Item1.City</div>
                </div>
                <div class="row small-text-bold offset-lg-1" style="margin-left: 0px; text-decoration: none">Addres:</div>
                <div class="row small-text-normal" style="text-align: start; margin-left: 20%; margin-right: 0px;">@Model.Item1.Address</div>
                <div class="row small-text-bold offset-lg-1" style="margin-left: 0px; text-decoration: none">Description :</div>
                <div class="row small-text-normal" style="text-align: start; margin-left: 5%; margin-right: 0px;">@Model.Item1.Description</div>
            </div>
        </div>
        @if (Model.Item1.IsLoggedUserPositionFree)
        {
            <div style="text-align: end;">
                <input asp-controller="Offers" asp-action="Send" type="submit" formmethod="get" class="btn btn-primary" value="Send Offer" style="margin-top: 10px;margin-right: 5%;">
                <div class="col-12" style="text-align: end;">
                    <span class="timer">Remaining time for sending offers: </span>
                    <span class="timer" id="timer" style="margin-right: 5%; text-align: end;"></span>
                </div>                
            </div>
        }

    </div>
</div>

<script>
    // Set the date we're counting down to
    /**/
    var countDownDate = new Date('@Model.Item1.Deadline').getTime();
                            /**/

                            // Update the count down every 1 second
                            var x = setInterval(function () {

        // Get today's date and time
                                var now = new Date().getTime();

                            // Find the distance between now and the count down date
                            var distance = countDownDate - now;

                            // Time calculations for days, hours, minutes and seconds
                            var days = Math.floor(distance / (1000 * 60 * 60 * 24));
                            var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                            var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
                            var seconds = Math.floor((distance % (1000 * 60)) / 1000);

                            // Output the result in an element with id="demo"
                            document.getElementById("timer").innerHTML = days + "days " + hours + "hours "
            + minutes + "min. " + seconds + "sec. ";

        // If the count down is over, write some text
        if (distance < 0) {
            clearInterval(x);
                            document.getElementById('timer').innerHTML = "The time that you were able to send offers for this project has expired.";
        }
                    }, 1000);
</script>





